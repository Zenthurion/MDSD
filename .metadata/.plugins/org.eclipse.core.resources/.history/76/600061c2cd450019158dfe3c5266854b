/*
 * generated by Xtext 2.16.0
 */
package dk.sdu.mdsd.ui.labeling

import com.google.inject.Inject
import dk.sdu.mdsd.interpreter.ExpressionsInterpreter
import dk.sdu.mdsd.mathInterpreter.Expression
import dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide
import dk.sdu.mdsd.mathInterpreter.PlusOrMinus
import dk.sdu.mdsd.mathInterpreter.Primary
import dk.sdu.mdsd.mathInterpreter.Solution
import dk.sdu.mdsd.mathInterpreter.Variable
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class MathInterpreterLabelProvider extends DefaultEObjectLabelProvider {
	
	@Inject extension ExpressionsInterpreter

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}

	def text(Solution it) {
		'Solution'
	}

	def text(Variable it) {
		name + " = " + value.evaluate
	}

	def text(PlusOrMinus exp) {
		'Expression'
	}
	
	def text(MultiplyOrDivide exp) {
		'Expression'
	}
	
	def text(Expression exp) {
		'Expression'
	}
	
	def text(Primary prim) {
		'Value'
	}
}
