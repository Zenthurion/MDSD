/**
 * generated by Xtext 2.16.0
 */
package dk.sdu.mdsd.mathInterpreter;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see dk.sdu.mdsd.mathInterpreter.MathInterpreterFactory
 * @model kind="package"
 * @generated
 */
public interface MathInterpreterPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "mathInterpreter";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.sdu.dk/mdsd/MathInterpreter";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "mathInterpreter";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MathInterpreterPackage eINSTANCE = dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl.init();

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.SolutionImpl <em>Solution</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.SolutionImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getSolution()
   * @generated
   */
  int SOLUTION = 0;

  /**
   * The feature id for the '<em><b>Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOLUTION__VARIABLES = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOLUTION__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Solution</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOLUTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.VariableImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__VALUE = 1;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.ExpressionImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 2;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXP = 0;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.PlusOrMinusImpl <em>Plus Or Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.PlusOrMinusImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getPlusOrMinus()
   * @generated
   */
  int PLUS_OR_MINUS = 3;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_OR_MINUS__LEFT = 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_OR_MINUS__OPERATOR = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_OR_MINUS__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Plus Or Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_OR_MINUS_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.MultiplyOrDivideImpl <em>Multiply Or Divide</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.MultiplyOrDivideImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getMultiplyOrDivide()
   * @generated
   */
  int MULTIPLY_OR_DIVIDE = 4;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_OR_DIVIDE__LEFT = 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_OR_DIVIDE__OPERATOR = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_OR_DIVIDE__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Multiply Or Divide</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_OR_DIVIDE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.PrimaryImpl <em>Primary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.PrimaryImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getPrimary()
   * @generated
   */
  int PRIMARY = 5;

  /**
   * The number of structural features of the '<em>Primary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.PlusImpl <em>Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.PlusImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getPlus()
   * @generated
   */
  int PLUS = 6;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__LEFT = PLUS_OR_MINUS__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__OPERATOR = PLUS_OR_MINUS__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS__RIGHT = PLUS_OR_MINUS__RIGHT;

  /**
   * The number of structural features of the '<em>Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_FEATURE_COUNT = PLUS_OR_MINUS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.MinusImpl <em>Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.MinusImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getMinus()
   * @generated
   */
  int MINUS = 7;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__LEFT = PLUS_OR_MINUS__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__OPERATOR = PLUS_OR_MINUS__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS__RIGHT = PLUS_OR_MINUS__RIGHT;

  /**
   * The number of structural features of the '<em>Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MINUS_FEATURE_COUNT = PLUS_OR_MINUS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.MultiplyImpl <em>Multiply</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.MultiplyImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getMultiply()
   * @generated
   */
  int MULTIPLY = 8;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY__LEFT = MULTIPLY_OR_DIVIDE__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY__OPERATOR = MULTIPLY_OR_DIVIDE__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY__RIGHT = MULTIPLY_OR_DIVIDE__RIGHT;

  /**
   * The number of structural features of the '<em>Multiply</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_FEATURE_COUNT = MULTIPLY_OR_DIVIDE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.DivideImpl <em>Divide</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.DivideImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getDivide()
   * @generated
   */
  int DIVIDE = 9;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVIDE__LEFT = MULTIPLY_OR_DIVIDE__LEFT;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVIDE__OPERATOR = MULTIPLY_OR_DIVIDE__OPERATOR;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVIDE__RIGHT = MULTIPLY_OR_DIVIDE__RIGHT;

  /**
   * The number of structural features of the '<em>Divide</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVIDE_FEATURE_COUNT = MULTIPLY_OR_DIVIDE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.NumImpl <em>Num</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.NumImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getNum()
   * @generated
   */
  int NUM = 10;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM__VALUE = PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Num</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_FEATURE_COUNT = PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.VariableRefImpl <em>Variable Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.VariableRefImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getVariableRef()
   * @generated
   */
  int VARIABLE_REF = 11;

  /**
   * The feature id for the '<em><b>Value</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__VALUE = PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF_FEATURE_COUNT = PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link dk.sdu.mdsd.mathInterpreter.impl.BracketImpl <em>Bracket</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see dk.sdu.mdsd.mathInterpreter.impl.BracketImpl
   * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getBracket()
   * @generated
   */
  int BRACKET = 12;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BRACKET__VALUE = PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Bracket</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BRACKET_FEATURE_COUNT = PRIMARY_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Solution <em>Solution</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Solution</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Solution
   * @generated
   */
  EClass getSolution();

  /**
   * Returns the meta object for the containment reference list '{@link dk.sdu.mdsd.mathInterpreter.Solution#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variables</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Solution#getVariables()
   * @see #getSolution()
   * @generated
   */
  EReference getSolution_Variables();

  /**
   * Returns the meta object for the containment reference '{@link dk.sdu.mdsd.mathInterpreter.Solution#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Solution#getExpression()
   * @see #getSolution()
   * @generated
   */
  EReference getSolution_Expression();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link dk.sdu.mdsd.mathInterpreter.Variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Variable#getName()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Name();

  /**
   * Returns the meta object for the containment reference '{@link dk.sdu.mdsd.mathInterpreter.Variable#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Variable#getValue()
   * @see #getVariable()
   * @generated
   */
  EReference getVariable_Value();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link dk.sdu.mdsd.mathInterpreter.Expression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Expression#getExp()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Exp();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.PlusOrMinus <em>Plus Or Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus Or Minus</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.PlusOrMinus
   * @generated
   */
  EClass getPlusOrMinus();

  /**
   * Returns the meta object for the containment reference '{@link dk.sdu.mdsd.mathInterpreter.PlusOrMinus#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.PlusOrMinus#getLeft()
   * @see #getPlusOrMinus()
   * @generated
   */
  EReference getPlusOrMinus_Left();

  /**
   * Returns the meta object for the attribute '{@link dk.sdu.mdsd.mathInterpreter.PlusOrMinus#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.PlusOrMinus#getOperator()
   * @see #getPlusOrMinus()
   * @generated
   */
  EAttribute getPlusOrMinus_Operator();

  /**
   * Returns the meta object for the containment reference '{@link dk.sdu.mdsd.mathInterpreter.PlusOrMinus#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.PlusOrMinus#getRight()
   * @see #getPlusOrMinus()
   * @generated
   */
  EReference getPlusOrMinus_Right();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide <em>Multiply Or Divide</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiply Or Divide</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide
   * @generated
   */
  EClass getMultiplyOrDivide();

  /**
   * Returns the meta object for the containment reference '{@link dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide#getLeft()
   * @see #getMultiplyOrDivide()
   * @generated
   */
  EReference getMultiplyOrDivide_Left();

  /**
   * Returns the meta object for the attribute '{@link dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide#getOperator()
   * @see #getMultiplyOrDivide()
   * @generated
   */
  EAttribute getMultiplyOrDivide_Operator();

  /**
   * Returns the meta object for the containment reference '{@link dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide#getRight()
   * @see #getMultiplyOrDivide()
   * @generated
   */
  EReference getMultiplyOrDivide_Right();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Primary <em>Primary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Primary
   * @generated
   */
  EClass getPrimary();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Plus <em>Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Plus
   * @generated
   */
  EClass getPlus();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Minus <em>Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Minus</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Minus
   * @generated
   */
  EClass getMinus();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Multiply <em>Multiply</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiply</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Multiply
   * @generated
   */
  EClass getMultiply();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Divide <em>Divide</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Divide</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Divide
   * @generated
   */
  EClass getDivide();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Num <em>Num</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Num</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Num
   * @generated
   */
  EClass getNum();

  /**
   * Returns the meta object for the attribute '{@link dk.sdu.mdsd.mathInterpreter.Num#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Num#getValue()
   * @see #getNum()
   * @generated
   */
  EAttribute getNum_Value();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.VariableRef <em>Variable Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Ref</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.VariableRef
   * @generated
   */
  EClass getVariableRef();

  /**
   * Returns the meta object for the reference '{@link dk.sdu.mdsd.mathInterpreter.VariableRef#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Value</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.VariableRef#getValue()
   * @see #getVariableRef()
   * @generated
   */
  EReference getVariableRef_Value();

  /**
   * Returns the meta object for class '{@link dk.sdu.mdsd.mathInterpreter.Bracket <em>Bracket</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bracket</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Bracket
   * @generated
   */
  EClass getBracket();

  /**
   * Returns the meta object for the containment reference '{@link dk.sdu.mdsd.mathInterpreter.Bracket#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see dk.sdu.mdsd.mathInterpreter.Bracket#getValue()
   * @see #getBracket()
   * @generated
   */
  EReference getBracket_Value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MathInterpreterFactory getMathInterpreterFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.SolutionImpl <em>Solution</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.SolutionImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getSolution()
     * @generated
     */
    EClass SOLUTION = eINSTANCE.getSolution();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SOLUTION__VARIABLES = eINSTANCE.getSolution_Variables();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SOLUTION__EXPRESSION = eINSTANCE.getSolution_Expression();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.VariableImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getVariable_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__VALUE = eINSTANCE.getVariable_Value();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.ExpressionImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXP = eINSTANCE.getExpression_Exp();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.PlusOrMinusImpl <em>Plus Or Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.PlusOrMinusImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getPlusOrMinus()
     * @generated
     */
    EClass PLUS_OR_MINUS = eINSTANCE.getPlusOrMinus();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS_OR_MINUS__LEFT = eINSTANCE.getPlusOrMinus_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLUS_OR_MINUS__OPERATOR = eINSTANCE.getPlusOrMinus_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS_OR_MINUS__RIGHT = eINSTANCE.getPlusOrMinus_Right();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.MultiplyOrDivideImpl <em>Multiply Or Divide</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.MultiplyOrDivideImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getMultiplyOrDivide()
     * @generated
     */
    EClass MULTIPLY_OR_DIVIDE = eINSTANCE.getMultiplyOrDivide();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLY_OR_DIVIDE__LEFT = eINSTANCE.getMultiplyOrDivide_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLY_OR_DIVIDE__OPERATOR = eINSTANCE.getMultiplyOrDivide_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLY_OR_DIVIDE__RIGHT = eINSTANCE.getMultiplyOrDivide_Right();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.PrimaryImpl <em>Primary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.PrimaryImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getPrimary()
     * @generated
     */
    EClass PRIMARY = eINSTANCE.getPrimary();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.PlusImpl <em>Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.PlusImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getPlus()
     * @generated
     */
    EClass PLUS = eINSTANCE.getPlus();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.MinusImpl <em>Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.MinusImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getMinus()
     * @generated
     */
    EClass MINUS = eINSTANCE.getMinus();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.MultiplyImpl <em>Multiply</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.MultiplyImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getMultiply()
     * @generated
     */
    EClass MULTIPLY = eINSTANCE.getMultiply();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.DivideImpl <em>Divide</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.DivideImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getDivide()
     * @generated
     */
    EClass DIVIDE = eINSTANCE.getDivide();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.NumImpl <em>Num</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.NumImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getNum()
     * @generated
     */
    EClass NUM = eINSTANCE.getNum();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUM__VALUE = eINSTANCE.getNum_Value();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.VariableRefImpl <em>Variable Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.VariableRefImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getVariableRef()
     * @generated
     */
    EClass VARIABLE_REF = eINSTANCE.getVariableRef();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_REF__VALUE = eINSTANCE.getVariableRef_Value();

    /**
     * The meta object literal for the '{@link dk.sdu.mdsd.mathInterpreter.impl.BracketImpl <em>Bracket</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see dk.sdu.mdsd.mathInterpreter.impl.BracketImpl
     * @see dk.sdu.mdsd.mathInterpreter.impl.MathInterpreterPackageImpl#getBracket()
     * @generated
     */
    EClass BRACKET = eINSTANCE.getBracket();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BRACKET__VALUE = eINSTANCE.getBracket_Value();

  }

} //MathInterpreterPackage
