/**
 * generated by Xtext 2.16.0
 */
package dk.sdu.mdsd.ui.labeling;

import com.google.inject.Inject;
import dk.sdu.mdsd.interpreter.ExpressionsInterpreter;
import dk.sdu.mdsd.mathInterpreter.Expression;
import dk.sdu.mdsd.mathInterpreter.MultiplyOrDivide;
import dk.sdu.mdsd.mathInterpreter.PlusOrMinus;
import dk.sdu.mdsd.mathInterpreter.Primary;
import dk.sdu.mdsd.mathInterpreter.Solution;
import dk.sdu.mdsd.mathInterpreter.Variable;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.eclipse.xtext.xbase.lib.Extension;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
@SuppressWarnings("all")
public class MathInterpreterLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  @Extension
  private ExpressionsInterpreter _expressionsInterpreter;
  
  @Inject
  public MathInterpreterLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final Solution it) {
    return "Solution";
  }
  
  public String text(final Variable it) {
    String _name = it.getName();
    String _plus = (_name + " = ");
    String _string = Integer.valueOf(this._expressionsInterpreter.evaluate(it.getValue())).toString();
    return (_plus + _string);
  }
  
  public String text(final PlusOrMinus exp) {
    return "Expression";
  }
  
  public String text(final MultiplyOrDivide exp) {
    return "Expression";
  }
  
  public String text(final Expression exp) {
    return "Expression";
  }
  
  public String text(final Primary prim) {
    return "Value";
  }
}
